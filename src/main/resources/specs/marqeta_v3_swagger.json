{
  "swagger": "2.0",
  "info": {
    "description": "Simplified management of your payment programs",
    "version": "3.0.0",
    "title": "Marqeta Core API"
  },
  "basePath": "/v3",
  "tags": [
    {
      "name": "cards"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/cards/{token}": {
      "get": {
        "tags": [
          "cards"
        ],
        "summary": "Returns a specific card",
        "description": "",
        "operationId": "getCardsToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Card token",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Object to expand",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/card_response"
            }
          },
          "400": {
            "description": "User input error/Bad request"
          },
          "500": {
            "description": "Server error"
          },
          "404": {
            "description": "Card not found"
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      },
      "put": {
        "tags": [
          "cards"
        ],
        "summary": "Updates a specific card",
        "description": "",
        "operationId": "putCardsToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Card token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/card_update_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/card_response"
            }
          },
          "400": {
            "description": "User input error/Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/cardtransitions": {
      "post": {
        "tags": [
          "card transitions"
        ],
        "summary": "Creates a card transition object",
        "description": "",
        "operationId": "postCardtransitions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/card_transition_request"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/card_transition_response"
            }
          },
          "400": {
            "description": "User input error/Bad request"
          },
          "422": {
            "description": "Cardholder not active"
          },
          "500": {
            "description": "Server error"
          },
          "409": {
            "description": "Token already associated with a different payload"
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/cards/{token}/showpan" : {
      "get" : {
        "tags" : [ "cards" ],
        "summary" : "Returns a specific card - PAN visible",
        "description" : "",
        "operationId" : "getCardsTokenShowpan",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "description" : "Card token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "show_cvv_number",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/card_response"
            }
          },
          "400" : {
            "description" : "User input error/Bad request"
          },
          "500" : {
            "description" : "Server error"
          },
          "404" : {
            "description" : "Card not found"
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/pins/controltoken" : {
      "post" : {
        "tags" : [ "pins" ],
        "summary" : "Creates a new control token for a PIN",
        "description" : "Creates a new control token for a PIN, for the specified card for PIN debit or ATM transactions,or to allow for a pin to be revealed to authorized callers.",
        "operationId" : "postPinsControltoken",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/control_token_request"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Control token created",
            "schema" : {
              "$ref" : "#/definitions/control_token_response"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "500" : {
            "description" : "Server error"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/pins" : {
      "put" : {
        "tags" : [ "pins" ],
        "summary" : "Updates the PIN control token",
        "description" : "Updates a PIN identified by its control token.",
        "operationId" : "putPins",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/pin_request"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad request"
          },
          "412" : {
            "description" : "Weak PIN"
          },
          "500" : {
            "description" : "Server error"
          },
          "204" : {
            "description" : "PIN was successfully set"
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/velocitycontrols" : {
      "get" : {
        "tags" : [ "velocity controls" ],
        "summary" : "Queries velocity controls",
        "description" : "",
        "operationId" : "getVelocitycontrols",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "card_product",
          "in" : "query",
          "description" : "Card product token. Use \"null\" to get velocity controls that are not associated with any card product.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user",
          "in" : "query",
          "description" : "User token. Use \"null\" to get velocity controls that are not associated with any user.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Number of items to retrieve. Count can be between 1 - 10 items.",
          "required" : false,
          "type" : "integer",
          "default" : 5,
          "format" : "int32"
        }, {
          "name" : "start_index",
          "in" : "query",
          "description" : "Indicates from what row to start returning data.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sort_by",
          "in" : "query",
          "description" : "Field by which to sort the returned items. Use any field in the model, or system fields lastModifiedTime or createdTime.",
          "required" : false,
          "type" : "string",
          "default" : "-lastModifiedTime"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/VelocityControlListResponse"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "500" : {
            "description" : "Server error"
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      },
      "post" : {
        "tags" : [ "velocity controls" ],
        "summary" : "Creates a velocity control",
        "description" : "",
        "operationId" : "postVelocitycontrols",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Velocity control object",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/velocity_control_request"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/velocity_control_response"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "500" : {
            "description" : "Server error"
          },
          "409" : {
            "description" : "Token already associated with a different payload"
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/velocitycontrols/user/{user_token}/available" : {
      "get" : {
        "tags" : [ "velocity controls" ],
        "summary" : "Queries a user's velocity control balances",
        "description" : "",
        "operationId" : "getVelocitycontrolsUserUsertokenAvailable",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "user_token",
          "in" : "path",
          "description" : "User token",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Number of items to retrieve. Count can be between 1 - 10 items.",
          "required" : false,
          "type" : "integer",
          "default" : 5,
          "format" : "int32"
        }, {
          "name" : "start_index",
          "in" : "query",
          "description" : "Indicates from what row to start returning data.",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sort_by",
          "in" : "query",
          "description" : "Field by which to sort the returned items. Use any field in the model, or system fields lastModifiedTime or createdTime.",
          "required" : false,
          "type" : "string",
          "default" : "-lastModifiedTime"
        }, {
          "name" : "force_dto",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/VelocityControlBalanceListResponse"
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "500" : {
            "description" : "Server error"
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    },
    "/velocitycontrols/{token}" : {
      "get": {
        "tags": [
          "velocity controls"
        ],
        "summary": "Returns a specific velocity control",
        "description": "",
        "operationId": "getVelocitycontrolsToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Velocity control token",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-delimited list of fields to return (e.g. field_1,field_2,..). Leave blank to return all fields.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/velocity_control_response"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          },
          "404": {
            "description": "Velocity control not found"
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      },
      "put": {
        "tags": [
          "velocity controls"
        ],
        "summary": "Updates a specific velocity control",
        "description": "",
        "operationId": "putVelocitycontrolsToken",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Velocity control token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Velocity control object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/velocity_control_update_request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/velocity_control_response"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Server error"
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "basic": {
      "description": "",
      "type": "basic"
    }
  },
  "definitions": {
    "velocity_control_request" : {
      "type" : "object",
      "required" : [ "amount_limit", "currency_code", "velocity_window" ],
      "properties" : {
        "token" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 36
        },
        "name" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 255
        },
        "association" : {
          "$ref" : "#/definitions/spend_control_association"
        },
        "merchant_scope" : {
          "$ref" : "#/definitions/merchant_scope"
        },
        "usage_limit" : {
          "type" : "integer",
          "format" : "int32",
          "minimum" : -1.0
        },
        "approvals_only" : {
          "type" : "boolean",
          "default" : false
        },
        "include_purchases" : {
          "type" : "boolean",
          "default" : false
        },
        "include_withdrawals" : {
          "type" : "boolean",
          "default" : false
        },
        "include_transfers" : {
          "type" : "boolean",
          "default" : false
        },
        "include_cashback" : {
          "type" : "boolean",
          "default" : false
        },
        "include_credits" : {
          "type" : "boolean",
          "default" : false
        },
        "currency_code" : {
          "type" : "string"
        },
        "amount_limit" : {
          "type" : "number",
          "minimum" : 0.0
        },
        "velocity_window" : {
          "type" : "string",
          "enum" : [ "DAY", "WEEK", "MONTH", "LIFETIME", "TRANSACTION" ]
        },
        "active" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "xml" : {
        "name" : "velocity_control_request"
      }
    },
    "velocity_control_balance_response" : {
      "type" : "object",
      "required" : [ "amount_limit", "available", "currency_code", "velocity_window" ],
      "properties" : {
        "token" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 36
        },
        "name" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 255
        },
        "association" : {
          "$ref" : "#/definitions/spend_control_association"
        },
        "merchant_scope" : {
          "$ref" : "#/definitions/merchant_scope"
        },
        "usage_limit" : {
          "type" : "integer",
          "format" : "int32",
          "minimum" : -1.0
        },
        "approvals_only" : {
          "type" : "boolean",
          "default" : false
        },
        "include_purchases" : {
          "type" : "boolean",
          "default" : false
        },
        "include_withdrawals" : {
          "type" : "boolean",
          "default" : false
        },
        "include_transfers" : {
          "type" : "boolean",
          "default" : false
        },
        "include_cashback" : {
          "type" : "boolean",
          "default" : false
        },
        "include_credits" : {
          "type" : "boolean",
          "default" : false
        },
        "currency_code" : {
          "type" : "string"
        },
        "amount_limit" : {
          "type" : "number",
          "minimum" : 0.0
        },
        "velocity_window" : {
          "type" : "string",
          "enum" : [ "DAY", "WEEK", "MONTH", "LIFETIME", "TRANSACTION" ]
        },
        "active" : {
          "type" : "boolean",
          "default" : false
        },
        "available" : {
          "description" : "Available balance",
          "$ref" : "#/definitions/available"
        }
      },
      "xml" : {
        "name" : "velocity_control_balance_response"
      }
    },
    "available" : {
      "type" : "object",
      "required" : [ "amount", "uses" ],
      "properties" : {
        "uses" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Uses available",
          "default" : 0
        },
        "amount" : {
          "type" : "number",
          "minimum" : 0.0
        },
        "days_remaining" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Days remaining"
        }
      },
      "xml" : {
        "name" : "available"
      }
    },
    "VelocityControlBalanceListResponse" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "start_index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "end_index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "is_more" : {
          "type" : "boolean",
          "default" : false
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/velocity_control_balance_response"
          }
        }
      }
    },
    "velocity_control_update_request" : {
      "type" : "object",
      "required" : [ "token" ],
      "properties" : {
        "token" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 36
        },
        "name" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 255
        },
        "association" : {
          "$ref" : "#/definitions/spend_control_association"
        },
        "merchant_scope" : {
          "$ref" : "#/definitions/merchant_scope"
        },
        "usage_limit" : {
          "type" : "integer",
          "format" : "int32",
          "minimum" : -1.0
        },
        "approvals_only" : {
          "type" : "boolean",
          "default" : false
        },
        "include_purchases" : {
          "type" : "boolean",
          "default" : false
        },
        "include_withdrawals" : {
          "type" : "boolean",
          "default" : false
        },
        "include_transfers" : {
          "type" : "boolean",
          "default" : false
        },
        "include_cashback" : {
          "type" : "boolean",
          "default" : false
        },
        "include_credits" : {
          "type" : "boolean",
          "default" : false
        },
        "currency_code" : {
          "type" : "string"
        },
        "amount_limit" : {
          "type" : "number",
          "minimum" : 0.0
        },
        "velocity_window" : {
          "type" : "string",
          "enum" : [ "DAY", "WEEK", "MONTH", "QUARTER", "YEAR", "LIFETIME", "TRANSACTION" ]
        },
        "active" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "xml" : {
        "name" : "velocity_control_update_request"
      }
    },
    "merchant_scope" : {
      "type" : "object",
      "properties" : {
        "mid" : {
          "type" : "string",
          "description" : "36 char max"
        },
        "mcc" : {
          "type" : "string",
          "description" : "4 char max"
        },
        "mcc_group" : {
          "type" : "string",
          "description" : "36 char max"
        }
      },
      "xml" : {
        "name" : "merchant_scope"
      }
    },
    "velocity_control_response" : {
      "type" : "object",
      "required" : [ "amount_limit", "currency_code", "velocity_window" ],
      "properties" : {
        "token" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 36
        },
        "name" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 255
        },
        "association" : {
          "$ref" : "#/definitions/spend_control_association"
        },
        "merchant_scope" : {
          "$ref" : "#/definitions/merchant_scope"
        },
        "usage_limit" : {
          "type" : "integer",
          "format" : "int32",
          "minimum" : -1.0
        },
        "approvals_only" : {
          "type" : "boolean",
          "default" : false
        },
        "include_purchases" : {
          "type" : "boolean",
          "default" : false
        },
        "include_withdrawals" : {
          "type" : "boolean",
          "default" : false
        },
        "include_transfers" : {
          "type" : "boolean",
          "default" : false
        },
        "include_cashback" : {
          "type" : "boolean",
          "default" : false
        },
        "include_credits" : {
          "type" : "boolean",
          "default" : false
        },
        "currency_code" : {
          "type" : "string"
        },
        "amount_limit" : {
          "type" : "number",
          "minimum" : 0.0
        },
        "velocity_window" : {
          "type" : "string",
          "enum" : [ "DAY", "WEEK", "MONTH", "LIFETIME", "TRANSACTION" ]
        },
        "active" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "xml" : {
        "name" : "velocity_control_response"
      }
    },
    "spend_control_association" : {
      "type" : "object",
      "properties" : {
        "card_product_token" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 36
        },
        "user_token" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 36
        }
      },
      "xml" : {
        "name" : "spend_control_association"
      }
    },
    "VelocityControlListResponse" : {
      "type" : "object",
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "start_index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "end_index" : {
          "type" : "integer",
          "format" : "int32"
        },
        "is_more" : {
          "type" : "boolean",
          "default" : false
        },
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/velocity_control_response"
          }
        }
      }
    },
    "control_token_response" : {
      "type" : "object",
      "required" : [ "control_token" ],
      "properties" : {
        "control_token" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "control_token_response"
      }
    },
    "control_token_request" : {
      "type" : "object",
      "required" : [ "card_token" ],
      "properties" : {
        "card_token" : {
          "type" : "string",
          "description" : "Token associated with the card",
          "minLength" : 1,
          "maxLength" : 36
        },
        "controltoken_type" : {
          "type" : "string",
          "description" : "Type of control token required",
          "enum" : [ "SET_PIN", "SHOW_PIN" ]
        }
      }
    },
    "pin_request" : {
      "type" : "object",
      "required" : [ "control_token", "pin" ],
      "properties" : {
        "control_token" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 36
        },
        "pin" : {
          "type" : "string"
        }
      },
      "xml" : {
        "name" : "pin_request"
      }
    },
    "CardListResponse": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "start_index": {
          "type": "integer",
          "format": "int32"
        },
        "end_index": {
          "type": "integer",
          "format": "int32"
        },
        "is_more": {
          "type": "boolean",
          "default": false
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/card_response"
          }
        }
      }
    },
    "activation_actions": {
      "type": "object",
      "properties": {
        "terminate_reissued_source_card": {
          "type": "boolean",
          "default": true
        },
        "swap_digital_wallet_tokens_from_card_token": {
          "type": "string",
          "minLength": 1,
          "maxLength": 36
        }
      },
      "xml": {
        "name": "activation_actions"
      }
    },
    "FulfillmentAddressResponse": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middle_name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "last_name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "address1": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "address2": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "city": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "state": {
          "type": "string",
          "minLength": 0,
          "maxLength": 32
        },
        "zip": {
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "postal_code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "country": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "phone": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "text": {
      "type": "object",
      "required": [
        "name_line_1"
      ],
      "properties": {
        "name_line_1": {
          "$ref": "#/definitions/text_value"
        },
        "name_line_2": {
          "$ref": "#/definitions/text_value"
        },
        "name_line_3": {
          "$ref": "#/definitions/text_value"
        }
      }
    },
    "text_value": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "images_card": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "thermal_color": {
          "type": "string"
        }
      }
    },
    "images_signature": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "images": {
      "type": "object",
      "properties": {
        "card": {
          "$ref": "#/definitions/images_card"
        },
        "carrier": {
          "$ref": "#/definitions/ImagesCarrier"
        },
        "signature": {
          "$ref": "#/definitions/images_signature"
        },
        "carrier_return_window": {
          "$ref": "#/definitions/images_carrier_return_window"
        }
      }
    },
    "images_carrier_return_window": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "card_personalization": {
      "type": "object",
      "required": [
        "text"
      ],
      "properties": {
        "text": {
          "$ref": "#/definitions/text"
        },
        "images": {
          "$ref": "#/definitions/images"
        },
        "carrier": {
          "$ref": "#/definitions/carrier"
        },
        "perso_type": {
          "type": "string",
          "enum": [
            "EMBOSS",
            "LASER",
            "FLAT"
          ]
        }
      }
    },
    "carrier": {
      "type": "object",
      "properties": {
        "template_id": {
          "type": "string"
        },
        "logo_file": {
          "type": "string"
        },
        "logo_thumbnail_file": {
          "type": "string"
        },
        "message_file": {
          "type": "string"
        },
        "message_line": {
          "type": "string"
        }
      }
    },
    "ImagesCarrier": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "message_1": {
          "type": "string"
        }
      }
    },
    "ShippingInformationResponse": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string",
          "enum": [
            "FEDEX_EXPEDITED",
            "FEDEX_REGULAR",
            "UPS_EXPEDITED",
            "UPS_REGULAR",
            "USPS_EXPEDITED",
            "USPS_REGULAR"
          ]
        },
        "return_address": {
          "$ref": "#/definitions/FulfillmentAddressResponse"
        },
        "recipient_address": {
          "$ref": "#/definitions/FulfillmentAddressResponse"
        },
        "care_of_line": {
          "type": "string",
          "description": "255 char max"
        }
      }
    },
    "CardFulfillmentResponse": {
      "type": "object",
      "required": [
        "card_personalization"
      ],
      "properties": {
        "shipping": {
          "$ref": "#/definitions/ShippingInformationResponse"
        },
        "card_personalization": {
          "$ref": "#/definitions/card_personalization"
        },
        "card_fulfillment_reason": {
          "type": "string",
          "enum": [
            "NEW",
            "LOST_STOLEN",
            "EXPIRED"
          ]
        }
      }
    },
    "card_transition_request": {
      "type": "object",
      "required": [
        "card_token",
        "channel",
        "state"
      ],
      "properties": {
        "token": {
          "type": "string",
          "minLength": 1,
          "maxLength": 36
        },
        "card_token": {
          "type": "string",
          "minLength": 1,
          "maxLength": 36
        },
        "reason": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "reason_code": {
          "type": "string",
          "enum": [
            "00",
            "01",
            "02",
            "03",
            "04",
            "05",
            "06",
            "07",
            "08",
            "09",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23"
          ]
        },
        "validations": {
          "$ref": "#/definitions/ValidationsRequest"
        },
        "channel": {
          "type": "string",
          "enum": [
            "API",
            "IVR",
            "FRAUD",
            "ADMIN",
            "SYSTEM"
          ]
        },
        "state": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "SUSPENDED",
            "TERMINATED"
          ]
        }
      }
    },
    "ValidationsRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/UserValidationRequest"
        }
      }
    },
    "UserValidationRequest": {
      "type": "object",
      "properties": {
        "birth_date": {
          "type": "string",
          "format": "date-time",
          "description": "yyyy-MM-dd"
        },
        "phone": {
          "type": "string",
          "description": "Phone #",
          "minLength": 0,
          "maxLength": 255
        },
        "ssn": {
          "type": "string",
          "description": "Last four digits of SSN",
          "minLength": 0,
          "maxLength": 255
        },
        "random_name_line1_postfix": {
          "type": "string",
          "description": "Six-char random name postfix",
          "minLength": 6,
          "maxLength": 6
        }
      }
    },
    "card_transition_response": {
      "type": "object",
      "required": [
        "barcode",
        "card_product_token",
        "card_token",
        "channel",
        "expiration",
        "expiration_time",
        "fulfillment_status",
        "last_four",
        "pan",
        "pin_is_set",
        "state",
        "token",
        "type",
        "user_token"
      ],
      "properties": {
        "token": {
          "type": "string",
          "minLength": 1,
          "maxLength": 36
        },
        "card_token": {
          "type": "string",
          "minLength": 1,
          "maxLength": 36
        },
        "user_token": {
          "type": "string",
          "minLength": 1,
          "maxLength": 36
        },
        "state": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "SUSPENDED",
            "TERMINATED",
            "UNACTIVATED"
          ]
        },
        "reason": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "reason_code": {
          "type": "string",
          "enum": [
            "00",
            "01",
            "02",
            "03",
            "04",
            "05",
            "06",
            "07",
            "08",
            "09",
            "10",
            "11",
            "12",
            "13",
            "14",
            "15",
            "16",
            "17",
            "18",
            "19",
            "20",
            "21",
            "22",
            "23"
          ]
        },
        "channel": {
          "type": "string",
          "enum": [
            "API",
            "IVR",
            "FRAUD",
            "ADMIN",
            "SYSTEM"
          ]
        },
        "fulfillment_status": {
          "type": "string",
          "enum": [
            "ISSUED",
            "ORDERED",
            "REJECTED",
            "SHIPPED",
            "DELIVERED",
            "DIGITALLY_PRESENTED"
          ]
        },
        "validations": {
          "$ref": "#/definitions/ValidationsResponse"
        },
        "type": {
          "type": "string",
          "enum": [
            "fulfillment.issued",
            "state.activated",
            "state.suspended",
            "state.reinstated",
            "state.terminated",
            "fulfillment.ordered",
            "fulfillment.rejected",
            "fulfillment.shipped",
            "fulfillment.delivered",
            "fulfillment.digitally_presented"
          ]
        },
        "created_time": {
          "type": "string",
          "format": "date-time"
        },
        "card_product_token": {
          "type": "string",
          "minLength": 0,
          "maxLength": 36
        },
        "last_four": {
          "type": "string"
        },
        "pan": {
          "type": "string"
        },
        "expiration": {
          "type": "string"
        },
        "expiration_time": {
          "type": "string"
        },
        "barcode": {
          "type": "string"
        },
        "pin_is_set": {
          "type": "boolean",
          "default": false
        },
        "fulfillment": {
          "$ref": "#/definitions/fulfillment"
        },
        "bulk_issuance_token": {
          "type": "string"
        },
        "reissue_pan_from_card_token": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/cardholder_metadata"
        },
        "card": {
          "$ref": "#/definitions/card_metadata"
        },
        "expedite": {
          "type": "boolean",
          "default": false
        }
      },
      "xml": {
        "name": "card_transition_response"
      }
    },
    "cardholder_metadata": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "cardholder_metadata"
      }
    },
    "card_metadata": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "xml": {
        "name": "card_metadata"
      }
    },
    "fulfillment": {
      "type": "object",
      "required": [
        "card_personalization"
      ],
      "properties": {
        "shipping": {
          "$ref": "#/definitions/shipping"
        },
        "card_personalization": {
          "$ref": "#/definitions/card_personalization"
        },
        "card_fulfillment_reason": {
          "type": "string",
          "enum": [
            "NEW",
            "LOST_STOLEN",
            "EXPIRED"
          ]
        }
      }
    },
    "ValidationsResponse": {
      "type": "object",
      "required": [
        "user"
      ],
      "properties": {
        "user": {
          "$ref": "#/definitions/UserValidationResponse"
        }
      }
    },
    "UserValidationResponse": {
      "type": "object",
      "required": [
        "birth_date",
        "phone",
        "random_name_line1_postfix",
        "ssn"
      ],
      "properties": {
        "birth_date": {
          "type": "boolean",
          "description": "yyyy-MM-dd",
          "default": false
        },
        "phone": {
          "type": "boolean",
          "description": "10 char max, phone number",
          "default": false
        },
        "ssn": {
          "type": "boolean",
          "description": "Last four digits of SSN",
          "default": false
        },
        "random_name_line1_postfix": {
          "type": "boolean",
          "description": "Six-char random name postfix",
          "default": false
        }
      }
    },
    "shipping": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string",
          "enum": [
            "LOCAL_MAIL",
            "GROUND",
            "TWO_DAY",
            "OVERNIGHT",
            "INTERNATIONAL",
            "FEDEX_EXPEDITED",
            "FEDEX_REGULAR",
            "UPS_EXPEDITED",
            "UPS_REGULAR",
            "USPS_EXPEDITED",
            "USPS_REGULAR"
          ]
        },
        "return_address": {
          "$ref": "#/definitions/fulfillment_address_request"
        },
        "recipient_address": {
          "$ref": "#/definitions/fulfillment_address_request"
        },
        "care_of_line": {
          "type": "string",
          "description": "255 char max"
        }
      },
      "xml": {
        "name": "shipping"
      }
    },
    "card_update_request": {
      "type": "object",
      "required": [
        "token"
      ],
      "properties": {
        "token": {
          "type": "string",
          "minLength": 1,
          "maxLength": 36
        },
        "user_token": {
          "type": "string",
          "minLength": 1,
          "maxLength": 36
        },
        "fulfillment": {
          "$ref": "#/definitions/fulfillment"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "fulfillment_address_request": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middle_name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "last_name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "address1": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "address2": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "city": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "state": {
          "type": "string",
          "minLength": 0,
          "maxLength": 32
        },
        "zip": {
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "country": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "phone": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "postal_code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        }
      },
      "xml": {
        "name": "fulfillment_address_request"
      }
    },
    "card_response": {
      "type": "object",
      "required": [
        "barcode",
        "card_product_token",
        "created_time",
        "expiration",
        "expiration_time",
        "fulfillment_status",
        "last_four",
        "last_modified_time",
        "pan",
        "pin_is_set",
        "state",
        "state_reason",
        "token",
        "user_token"
      ],
      "properties": {
        "created_time": {
          "type": "string",
          "format": "date-time",
          "description": "yyyy-MM-ddTHH:mm:ssZ"
        },
        "last_modified_time": {
          "type": "string",
          "format": "date-time",
          "description": "yyyy-MM-ddTHH:mm:ssZ"
        },
        "token": {
          "type": "string",
          "description": "36 char max"
        },
        "user_token": {
          "type": "string",
          "description": "36 char max"
        },
        "card_product_token": {
          "type": "string",
          "description": "36 char max"
        },
        "last_four": {
          "type": "string"
        },
        "pan": {
          "type": "string"
        },
        "expiration": {
          "type": "string"
        },
        "expiration_time": {
          "type": "string",
          "format": "date-time",
          "description": "yyyy-MM-ddTHH:mm:ssZ"
        },
        "cvv_number": {
          "type": "string"
        },
        "chip_cvv_number": {
          "type": "string"
        },
        "barcode": {
          "type": "string"
        },
        "pin_is_set": {
          "type": "boolean",
          "default": false
        },
        "state": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "SUSPENDED",
            "TERMINATED",
            "UNSUPPORTED",
            "UNACTIVATED"
          ]
        },
        "state_reason": {
          "type": "string"
        },
        "fulfillment_status": {
          "type": "string",
          "enum": [
            "ISSUED",
            "ORDERED",
            "REORDERED",
            "REJECTED",
            "SHIPPED",
            "DELIVERED",
            "DIGITALLY_PRESENTED"
          ]
        },
        "reissue_pan_from_card_token": {
          "type": "string"
        },
        "fulfillment": {
          "$ref": "#/definitions/CardFulfillmentResponse"
        },
        "bulk_issuance_token": {
          "type": "string"
        },
        "translate_pin_from_card_token": {
          "type": "string"
        },
        "activation_actions": {
          "$ref": "#/definitions/activation_actions"
        },
        "instrument_type": {
          "type": "string",
          "enum": [
            "PHYSICAL_MSR",
            "PHYSICAL_ICC",
            "PHYSICAL_CONTACTLESS",
            "PHYSICAL_COMBO",
            "VIRTUAL_PAN"
          ]
        },
        "expedite": {
          "type": "boolean",
          "default": false
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "contactless_exemption_counter": {
          "type": "integer",
          "format": "int32"
        },
        "contactless_exemption_total_amount": {
          "type": "number"
        }
      }
    }
  }
}