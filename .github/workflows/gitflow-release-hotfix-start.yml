name: Release and Hotfix Start

###
#
# Initiates release process from issues
#
# Trigger: issues opened with release or hotfix labels
#
###
on:
  issues:
    types: [ opened ]

jobs:
  compile:
    runs-on: ubuntu-latest
    if: contains(join(github.event.issue.labels.*.name, ' '), 'release:') || contains(join(github.event.issue.labels.*.name, ' '), 'bug:hotfix')
    strategy:
      matrix:
        java: [11]
    name: Initiates release or hotfix process from issues
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      BB_USERNAME: ${{ secrets.BB_USERNAME }}
      BB_PASSWORD: ${{ secrets.BB_PASSWORD }}
      BB_GITHUB_PACKAGES_USER: ${{ secrets.BB_GITHUB_PACKAGES_USER }}
      BB_GITHUB_PACKAGES_PAT: ${{ secrets.BB_GITHUB_PACKAGES_PAT }}

    steps:
      - id: flow-type
        run: |
          echo ::set-output name=release::${{ contains(join(github.event.issue.labels.*.name, ' '), 'release:') }}
          echo ::set-output name=release_minor::${{ contains(join(github.event.issue.labels.*.name, ' '), 'release:minor') }}
          echo ::set-output name=release_major::${{ contains(join(github.event.issue.labels.*.name, ' '), 'release:major') }}
          echo ::set-output name=hotfix::${{ contains(join(github.event.issue.labels.*.name, ' '), 'bug:hotfix') }}
      - uses: actions/checkout@v2
        if: steps.flow-type.outputs.release == 'true'
        with:
          ref: develop
      - uses: actions/checkout@v2
        if: steps.flow-type.outputs.hotfix == 'true'
        with:
          ref: master

      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
            ${{ runner.os }}-

      - name: Setup java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v9
        with:
          repositories: '[{ "id": "Backbase Repository", "url": "https://repo.backbase.com/repo" }, { "id": "github", "url": "https://maven.pkg.github.com/${GITHUB_REPOSITORY_OWNER}/mambu-clients" }]'
          plugin_repositories: '[{ "id": "Backbase Repository", "url": "https://repo.backbase.com/repo" }]'
          servers: '[{ "id": "Backbase Repository", "username": "${BB_USERNAME}", "password": "${BB_PASSWORD}" }, { "id": "github", "username": "${BB_GITHUB_PACKAGES_USER}", "password": "${BB_GITHUB_PACKAGES_PAT}" }]'
      - name: Set git username and email
        run: |
          git config --global user.email "bot@backbase.com"
          git config --global user.name "Release BOT"
      # Bump the version using semantic versioning
      # Release: major | minor | patch
      # Hotfix: patch
      - name: Bump Project Version
        id: target
        run: |
          MAJOR=$( mvn help:evaluate -Dexpression=project.artifact.selectedVersion.majorVersion -q -DforceStdout )
          MINOR=$( mvn help:evaluate -Dexpression=project.artifact.selectedVersion.minorVersion -q -DforceStdout )
          INCREMENTAL=$( mvn help:evaluate -Dexpression=project.artifact.selectedVersion.incrementalVersion -q -DforceStdout )
          if ${{ steps.flow-type.outputs.release_minor }} == 'true'
          then
            MINOR=`expr $MINOR + 1`
            NEW_VERSION=$MAJOR.$MINOR
          elif ${{ steps.flow-type.outputs.release_major }} == 'true'
          then
            MAJOR=`expr $MAJOR + 1`
            NEW_VERSION=$MAJOR.$MINOR
          fi
          echo ::set-output name=version::`echo $NEW_VERSION`

      - name: Start new release
        run: |
          if ${{ steps.flow-type.outputs.release }} == 'true'
          then
            mvn -B gitflow:release-start -DpushRemote=true -DbranchName=${{ steps.target.outputs.version }} -DreleaseVersion=${{ steps.target.outputs.version }}.0-release
          fi

      - name: Start new Hotfix
        run: |
          if ${{ steps.flow-type.outputs.hotfix }} == 'true'
          then
            mvn -B gitflow:hotfix-start -DpushRemote=true -DhotfixName=${{ github.event.inputs.hotfixName }}
          fi