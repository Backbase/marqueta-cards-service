<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://maven.apache.org/POM/4.0.0"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- The simplest way to build a service with service-sdk-starter-core
        is to use it as a parent in your project’s POM file, and alternative If you
        don’t want to use service-sdk-starter-core as your project’s parent, you
        can declare it as a dependency instead, see pom-as-dependency.xml -->
    <parent>
        <groupId>com.backbase.buildingblocks</groupId>
        <version>13.2.1</version>
        <artifactId>service-sdk-starter-core</artifactId>
        <relativePath/>
    </parent>

    <groupId>com.backbase.productled</groupId>
    <artifactId>cards-presentation-service</artifactId>
    <version>0.10.0</version>
    <packaging>war</packaging>
    <name>Backbase :: cards presentation service</name>

    <properties>
        <java.version>11</java.version>
        <!-- Docker configuration -->
        <docker.repo.url>${DEVOPS_CICD_ECR_BASE_URL}</docker.repo.url>
        <docker.image.name>${docker.repo.url}/${project.artifactId}</docker.image.name>
        <jib.to.image>${docker.image.name}:${project.version}</jib.to.image>
        <docker.distroless.war.latest.skip>true</docker.distroless.war.latest.skip>

        <!-- Dependencies properties -->
        <mapstruct.version>1.4.2.Final</mapstruct.version>
        <jsr305.version>3.0.2</jsr305.version>
        <springfox-core.version>3.0.0</springfox-core.version>
        <open-api-specs-dir>${project.build.directory}/yaml</open-api-specs-dir>
        <backbase-bom.version>2021.09</backbase-bom.version>

        <!-- Plugin version -->
        <boat-maven-plugin.version>0.14.9</boat-maven-plugin.version>
        <gitflow-maven-plugin.version>1.15.1</gitflow-maven-plugin.version>

        <!-- Sonar -->
        <sonar.projectKey>${SONAR_PROJECT_KEY}</sonar.projectKey>
        <sonar.organization>${SONAR_ORGANIZATION}</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <SIG_SECRET_KEY>JWTSecretKeyDontUseInProduction!</SIG_SECRET_KEY>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.backbase</groupId>
                <artifactId>backbase-bom</artifactId>
                <version>${backbase-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>

            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>communication</artifactId>
        </dependency>
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>production-support</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>auth-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-commons</artifactId>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-core</artifactId>
            <version>${springfox-core.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>${jsr305.version}</version>
        </dependency>
        <dependency>
            <groupId>com.backbase.buildingblocks</groupId>
            <artifactId>service-sdk-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-configuration-processor</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                        <path>
                            <groupId>com.backbase.buildingblocks</groupId>
                            <artifactId>service-sdk-starter-mapping</artifactId>
                            <version>${project.parent.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <compilerArg>-Amapstruct.unmappedTargetPolicy=ERROR</compilerArg>
                        <compilerArg>-parameters</compilerArg>
                    </compilerArgs>
                    <useIncrementalCompilation>false</useIncrementalCompilation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-card-manager</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.backbase.dbs.cards</groupId>
                                    <artifactId>card-manager</artifactId>
                                    <classifier>api</classifier>
                                    <type>zip</type>
                                    <outputDirectory>${open-api-specs-dir}</outputDirectory>
                                    <overWrite>true</overWrite>
                                </artifactItem>
                            </artifactItems>
                            <includes>**/*.yaml, **/*.json</includes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-user-manager</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.backbase.dbs.user</groupId>
                                    <artifactId>user-manager</artifactId>
                                    <classifier>api</classifier>
                                    <type>zip</type>
                                    <outputDirectory>${open-api-specs-dir}</outputDirectory>
                                    <overWrite>true</overWrite>
                                </artifactItem>
                            </artifactItems>
                            <includes>**/*.yaml, **/*.json</includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.backbase.oss</groupId>
                <artifactId>boat-maven-plugin</artifactId>
                <version>${boat-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>generate-code-from-cards-management-api-client-v2</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>
                                ${open-api-specs-dir}/card-manager/card-manager-client-api-v*.yaml
                            </inputSpec>
                            <output>${project.build.directory}/generated-sources</output>
                            <generateSupportingFiles>true</generateSupportingFiles>
                            <generatorName>spring</generatorName>
                            <strictSpec>true</strictSpec>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <configOptions>
                                <library>spring-boot</library>
                                <dateLibrary>java8</dateLibrary>
                                <interfaceOnly>true</interfaceOnly>
                                <addServletRequest>true</addServletRequest>
                                <skipDefaultInterface>true</skipDefaultInterface>
                                <useBeanValidation>true</useBeanValidation>
                                <generateAliasAsModel>true</generateAliasAsModel>
                                <useClassLevelBeanValidation>true</useClassLevelBeanValidation>
                                <useTags>true</useTags>
                                <java8>true</java8>
                                <useOptional>false</useOptional>
                                <apiPackage>com.backbase.presentation.card.rest.spec.v2.cards</apiPackage>
                                <modelPackage>com.backbase.presentation.card.rest.spec.v2.cards</modelPackage>
                                <sourceFolder>/</sourceFolder>
                            </configOptions>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-user-manager-api-code</id>
                        <goals>
                            <goal>generate-rest-template-embedded</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <inputSpec>
                                ${open-api-specs-dir}/user-manager/user-manager-service-api-v*.yaml
                            </inputSpec>
                            <apiPackage>com.backbase.dbs.user.manager.api.service.v2</apiPackage>
                            <modelPackage>com.backbase.dbs.user.manager.api.service.v2.model</modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generate-marqeta-api-code</id>
                        <goals>
                            <goal>generate-rest-template-embedded</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <inputSpec>
                                ${basedir}/src/main/resources/specs/marqeta_v3_swagger.json
                            </inputSpec>
                            <apiPackage>com.backbase.marqeta.clients.api</apiPackage>
                            <modelPackage>com.backbase.marqeta.clients.model</modelPackage>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.amashchenko.maven.plugin</groupId>
                <artifactId>gitflow-maven-plugin</artifactId>
                <version>${gitflow-maven-plugin.version}</version>
                <configuration>
                    <installProject>false</installProject>
                    <verbose>false</verbose>
                    <gitFlowConfig>
                        <productionBranch>${productionBranch}</productionBranch>
                        <developmentBranch>develop</developmentBranch>
                        <featureBranchPrefix>feature/</featureBranchPrefix>
                        <releaseBranchPrefix>release/</releaseBranchPrefix>
                        <hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>
                        <versionTagPrefix>v</versionTagPrefix>
                        <origin>origin</origin>
                    </gitFlowConfig>
                    <commitMessages>
                        <!-- since 1.2.1, see Customizing commit messages -->
                        <releaseStartMessage>Update versions for release @{version}</releaseStartMessage>
                        <releaseFinishMessage>Update for next development version @{version}</releaseFinishMessage>
                        <releaseVersionUpdateMessage>Update for next development version @{version}</releaseVersionUpdateMessage>
                    </commitMessages>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>test</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
